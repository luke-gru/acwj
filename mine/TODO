TODO
====

Functional
----------
* Get `1-1` working as intended, right now `-` right before a digit is scanned
as part of the INTLIT (workarounds all over source code of compiler)
* Allow structs as function parameters and local variables (needs more testing)
* Allow assignment declaration as init value in `for` stmt `for (int i = 0;;`)
* Put string literals in read-only memory
* Allow structs to be returned (see what gcc does, caller allocates stack
space for the function)
* Allow structs to be given as arguments (see what gcc does)

Bugs
----
* expression list as RHS of var declaration doesn't compile (see
test/compiler/assignment_expressions2.c
* compound assignment operators (+=, -=) don't check types of arguments in binexpr()

Optimizations
-------------
* Better register allocation/spilling (linear scan)
* Omit the frame pointer as micro-optimization, use stack pointer offsets instead
* Various register optimizations

Would Be Nice
-------------
* Output debug information during compilation
* Add static local variables, only initialized during first call to function
(see what gcc does)
