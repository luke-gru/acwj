#!/bin/sh
# Run each test and compare
# against known good output

cd test/vendor
successes=0
failures=0

# Build our compiler if needed
if [ ! -f ../../bin/compiler ]
then
    (cd ../.. && make compiler)
fi

# Try to use each input source file
for i in input*c
do
    # We can't do anything if there's no file to test against
    if [ ! -f "out.$i" -a ! -f "err.$i" ]
    then
        echo "Can't run test on $i, no output file!"

    # Output file: compile the source, run it and
    # capture the output, and compare it against
    # the known-good output
else if [ -f "out.$i" ]
then
    # Print the test name, compile it
    # with our compiler
    echo -n $i
    # HACK: when we remove the linking to lib/mylib.c in the compiler, we
    # can remove this `cd` hack.
    cd ../..
    ./bin/compiler -o test/vendor/out "test/vendor/$i"
    cd test/vendor

    cd ../..
    ./test/vendor/out > "test/vendor/trial.$i"
    cd test/vendor

    # Compare this agains the correct output
    cmp -s "out.$i" "trial.$i"

    # If different, announce failure
    # and print out the difference
    if [ "$?" -eq "1" ]
    then
        echo ": failed"
        diff -c "out.$i" "trial.$i"
        failures=$((failures+1))
        echo
        # No failure, so announce success
    else
        successes=$((successes+1))
        echo ": OK"
    fi

    # Error file: compile the source and
    # capture the error messages. Compare
    # against the known-bad output. Same
    # mechanism as before
    else if [ -f "err.$i" ]
    then
        echo -n $i
        echo " skipped"
        #cd ../..
        #./bin/compiler -o test/vendor/out test/vendor/$i 1>/dev/null 2> "test/vendor/trial.$i"
        #cd test/vendor
        #cmp -s "err.$i" "trial.$i"
        #if [ "$?" -eq "1" ]
        #then
            #echo ": failed"
            #diff -c "err.$i" "trial.$i"
            #failures=$((failures+1))
            #echo
        #else
            #successes=$((successes+1))
            #echo ": OK"
        #fi
    fi
    fi
    fi
 rm -f out out.s "trial.$i"
done

echo "$successes successful"
echo "$failures failed"
exit $failures
